<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!--规则 格式-->
<mapper namespace="com.example.dao.ReviewDao">

  <select id="queryall"   resultType="reviewfront">
        SELECT id_review,Snickname,Cname,Pname,Revt,Comment,difficulty,quality,upvote,downvote
        FROM review,student,course,professor
        WHERE student.Sno=review.Sno AND course.Cno=review.Cno AND professor.Pno=review.Pno AND review.state = 1;
    </select>
  
  <insert id="saveRev" parameterType="review" >
  		INSERT INTO review (Cno,Pno,Sno,Revt,Comment,difficulty,quality,personality,state,upvote,downvote)VALUES (#{cno},#{pno},#{sno},sysdate(),#{comment},#{difficulty},#{quality},#{personality},#{state},#{upvote},#{downvote})
  </insert>
  
  <update id="upvote" parameterType="int" >
  
  		UPDATE review SET upvote=upvote+1 WHERE id_review=(#{id_review})
  </update>
  
  <update id="downvote" parameterType = "int" >
  		UPDATE review SET downvote=downvote+1 WHERE id_review=(#{id_review})
  
  </update>

    <select id="queryByStu" parameterType="String" resultType="reviewfront">
        SELECT id_review,Snickname,Cname,Pname,Revt,Comment,difficulty,quality,upvote,downvote
        FROM review,student,course,professor
        WHERE student.Sno=review.Sno AND course.Cno=review.Cno AND professor.Pno=review.Pno
          AND review.Sno = (#{sno}) AND review.state = 1;
    </select>

    <select id="getRev" parameterType="int" resultType="review">
        SELECT * FROM review where (id_review = #{id_review})
    </select>

    <update id="modState" parameterType="int">
        UPDATE review set state=(#{n}) WHERE id_review=(#{id_review})
    </update>
    
    <select id="queryreview"  resultType="reviewfront">
    SELECT  id_review,Snickname,Cname,Pname,Revt,Comment,difficulty,quality,upvote,downvote
        FROM review,student,course,professor
        WHERE  student.Sno=review.Sno AND course.Cno=review.Cno AND professor.Pno=review.Pno AND Course.Cname LIKE CONCAT_WS('%','%',#{PCname},'%') OR
        student.Sno=review.Sno AND course.Cno=review.Cno AND professor.Pno=review.Pno AND Professor.Pname LIKE CONCAT_WS('%','%',#{PCname},'%')
        ;
    </select>

    <select id="getReport" resultType="review">
        SELECT *
        FROM review
        WHERE state > 1;
    </select>

    <delete id="deleRev" parameterType="int">
        DELETE FROM review WHERE id_review = #{id_review}
    </delete>

    <select id="getCourseRank" resultType="CourseRank">
        SELECT review.Cno, course.Cname, AVG((review.personality*0.3 + review.quality*0.5 + review.difficulty*0.2))
        FROM review, course
        WHERE review.Cno = course.Cno
        GROUP BY review.Cno
        ORDER BY 3 DESC
    </select>

    <select id="getProfRank" resultType="ProfessorRank">
        SELECT review.pno, professor.Pname, AVG((review.personality*0.3 + review.quality*0.5 + review.difficulty*0.2))
        FROM review, professor
        WHERE review.Pno = professor.Pno
        GROUP BY review.Pno
        ORDER BY 3 DESC
    </select>

</mapper>